{"mappings":"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","sources":["src/cat-api.js","node_modules/slim-select/dist/slimselect.umd.js","src/index.js"],"sourcesContent":["console.log('start');\n\n//const breed_Img = 'https://api.thecatapi.com/v1/images/search';\nconst breed_url = 'https://api.thecatapi.com/v1/breeds/';\n\nexport function fetchBreeds() {\n  console.log('Fetching breeds...');\n  return fetch(breed_url)\n    .then(response => {\n      console.log('Got response:', response);\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then(breeds => {\n      console.log('Successfully fetched breeds:', breeds);\n      return breeds;\n    })\n    .catch(error => {\n      console.error('Error fetching breeds:', error);\n      throw error;\n    });\n}\n\nexport function fetchCatByBreed(breedId) {\n  console.log('Entering fetchCatByBreed');\n  console.log('Fetching cat by breed...');\n  console.log(`Fetching url: ${breed_url}${breedId}`);\n  return fetch(`${breed_url}${breedId}`)\n    .then(response => {\n      console.log('Got response:', response);\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then(cat => {\n      console.log('Successfully fetched cat:', cat);\n      return cat;\n    })\n    .catch(error => {\n      console.error('Error fetching cat:', error);\n      throw error;\n    })\n    .finally(() => {\n      console.log('Exiting fetchCatByBreed');\n    });\n}\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.SlimSelect = factory());\n})(this, (function () { 'use strict';\n\n    function generateID() {\n        return Math.random().toString(36).substring(2, 10);\n    }\n    function hasClassInTree(element, className) {\n        function hasClass(e, c) {\n            if (c && e && e.classList && e.classList.contains(c)) {\n                return e;\n            }\n            if (c && e && e.dataset && e.dataset.id && e.dataset.id === className) {\n                return e;\n            }\n            return null;\n        }\n        function parentByClass(e, c) {\n            if (!e || e === document) {\n                return null;\n            }\n            else if (hasClass(e, c)) {\n                return e;\n            }\n            else {\n                return parentByClass(e.parentNode, c);\n            }\n        }\n        return hasClass(element, className) || parentByClass(element, className);\n    }\n    function debounce(func, wait = 50, immediate = false) {\n        let timeout;\n        return function (...args) {\n            const context = self;\n            const later = () => {\n                timeout = null;\n                if (!immediate) {\n                    func.apply(context, args);\n                }\n            };\n            const callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) {\n                func.apply(context, args);\n            }\n        };\n    }\n    function isEqual(a, b) {\n        return JSON.stringify(a) === JSON.stringify(b);\n    }\n    function kebabCase(str) {\n        const result = str.replace(/[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g, (match) => '-' + match.toLowerCase());\n        return str[0] === str[0].toUpperCase() ? result.substring(1) : result;\n    }\n\n    class Optgroup {\n        constructor(optgroup) {\n            this.id = !optgroup.id || optgroup.id === '' ? generateID() : optgroup.id;\n            this.label = optgroup.label || '';\n            this.selectAll = optgroup.selectAll === undefined ? false : optgroup.selectAll;\n            this.selectAllText = optgroup.selectAllText || 'Select All';\n            this.closable = optgroup.closable || 'off';\n            this.options = [];\n            if (optgroup.options) {\n                for (const o of optgroup.options) {\n                    this.options.push(new Option(o));\n                }\n            }\n        }\n    }\n    class Option {\n        constructor(option) {\n            this.id = !option.id || option.id === '' ? generateID() : option.id;\n            this.value = option.value === undefined ? option.text : option.value;\n            this.text = option.text || '';\n            this.html = option.html || '';\n            this.selected = option.selected !== undefined ? option.selected : false;\n            this.display = option.display !== undefined ? option.display : true;\n            this.disabled = option.disabled !== undefined ? option.disabled : false;\n            this.mandatory = option.mandatory !== undefined ? option.mandatory : false;\n            this.placeholder = option.placeholder !== undefined ? option.placeholder : false;\n            this.class = option.class || '';\n            this.style = option.style || '';\n            this.data = option.data || {};\n        }\n    }\n    class Store {\n        constructor(type, data) {\n            this.selectType = 'single';\n            this.data = [];\n            this.selectType = type;\n            this.setData(data);\n        }\n        validateDataArray(data) {\n            if (!Array.isArray(data)) {\n                return new Error('Data must be an array');\n            }\n            for (let dataObj of data) {\n                if (dataObj instanceof Optgroup || 'label' in dataObj) {\n                    if (!('label' in dataObj)) {\n                        return new Error('Optgroup must have a label');\n                    }\n                    if ('options' in dataObj && dataObj.options) {\n                        for (let option of dataObj.options) {\n                            return this.validateOption(option);\n                        }\n                    }\n                }\n                else if (dataObj instanceof Option || 'text' in dataObj) {\n                    return this.validateOption(dataObj);\n                }\n                else {\n                    return new Error('Data object must be a valid optgroup or option');\n                }\n            }\n            return null;\n        }\n        validateOption(option) {\n            if (!('text' in option)) {\n                return new Error('Option must have a text');\n            }\n            return null;\n        }\n        partialToFullData(data) {\n            let dataFinal = [];\n            data.forEach((dataObj) => {\n                if (dataObj instanceof Optgroup || 'label' in dataObj) {\n                    let optOptions = [];\n                    if ('options' in dataObj && dataObj.options) {\n                        dataObj.options.forEach((option) => {\n                            optOptions.push(new Option(option));\n                        });\n                    }\n                    if (optOptions.length > 0) {\n                        dataFinal.push(new Optgroup(dataObj));\n                    }\n                }\n                if (dataObj instanceof Option || 'text' in dataObj) {\n                    dataFinal.push(new Option(dataObj));\n                }\n            });\n            return dataFinal;\n        }\n        setData(data) {\n            this.data = this.partialToFullData(data);\n            if (this.selectType === 'single') {\n                this.setSelectedBy('value', this.getSelected());\n            }\n        }\n        getData() {\n            return this.filter(null, true);\n        }\n        getDataOptions() {\n            return this.filter(null, false);\n        }\n        addOption(option) {\n            this.setData(this.getData().concat(new Option(option)));\n        }\n        setSelectedBy(selectedType, selectedValues) {\n            let firstOption = null;\n            let hasSelected = false;\n            for (let dataObj of this.data) {\n                if (dataObj instanceof Optgroup) {\n                    for (let option of dataObj.options) {\n                        if (!firstOption) {\n                            firstOption = option;\n                        }\n                        option.selected = hasSelected ? false : selectedValues.includes(option[selectedType]);\n                        if (option.selected && this.selectType === 'single') {\n                            hasSelected = true;\n                        }\n                    }\n                }\n                if (dataObj instanceof Option) {\n                    if (!firstOption) {\n                        firstOption = dataObj;\n                    }\n                    dataObj.selected = hasSelected ? false : selectedValues.includes(dataObj[selectedType]);\n                    if (dataObj.selected && this.selectType === 'single') {\n                        hasSelected = true;\n                    }\n                }\n            }\n            if (this.selectType === 'single' && firstOption && !hasSelected) {\n                firstOption.selected = true;\n            }\n        }\n        getSelected() {\n            let selectedOptions = this.getSelectedOptions();\n            let selectedValues = [];\n            selectedOptions.forEach((option) => {\n                selectedValues.push(option.value);\n            });\n            return selectedValues;\n        }\n        getSelectedOptions() {\n            return this.filter((opt) => {\n                return opt.selected;\n            }, false);\n        }\n        getSelectedIDs() {\n            let selectedOptions = this.getSelectedOptions();\n            let selectedIDs = [];\n            selectedOptions.forEach((op) => {\n                selectedIDs.push(op.id);\n            });\n            return selectedIDs;\n        }\n        getOptgroupByID(id) {\n            for (let dataObj of this.data) {\n                if (dataObj instanceof Optgroup && dataObj.id === id) {\n                    return dataObj;\n                }\n            }\n            return null;\n        }\n        getOptionByID(id) {\n            let options = this.filter((opt) => {\n                return opt.id === id;\n            }, false);\n            return options.length ? options[0] : null;\n        }\n        getSelectType() {\n            return this.selectType;\n        }\n        getFirstOption() {\n            let option = null;\n            for (let dataObj of this.data) {\n                if (dataObj instanceof Optgroup) {\n                    option = dataObj.options[0];\n                }\n                else if (dataObj instanceof Option) {\n                    option = dataObj;\n                }\n                if (option) {\n                    break;\n                }\n            }\n            return option;\n        }\n        search(search, searchFilter) {\n            search = search.trim();\n            if (search === '') {\n                return this.getData();\n            }\n            return this.filter((opt) => {\n                return searchFilter(opt, search);\n            }, true);\n        }\n        filter(filter, includeOptgroup) {\n            const dataSearch = [];\n            this.data.forEach((dataObj) => {\n                if (dataObj instanceof Optgroup) {\n                    let optOptions = [];\n                    dataObj.options.forEach((option) => {\n                        if (!filter || filter(option)) {\n                            if (!includeOptgroup) {\n                                dataSearch.push(new Option(option));\n                            }\n                            else {\n                                optOptions.push(new Option(option));\n                            }\n                        }\n                    });\n                    if (optOptions.length > 0) {\n                        let optgroup = new Optgroup(dataObj);\n                        optgroup.options = optOptions;\n                        dataSearch.push(optgroup);\n                    }\n                }\n                if (dataObj instanceof Option) {\n                    if (!filter || filter(dataObj)) {\n                        dataSearch.push(new Option(dataObj));\n                    }\n                }\n            });\n            return dataSearch;\n        }\n    }\n\n    class Render {\n        constructor(settings, store, callbacks) {\n            this.classes = {\n                main: 'ss-main',\n                placeholder: 'ss-placeholder',\n                values: 'ss-values',\n                single: 'ss-single',\n                max: 'ss-max',\n                value: 'ss-value',\n                valueText: 'ss-value-text',\n                valueDelete: 'ss-value-delete',\n                valueOut: 'ss-value-out',\n                deselect: 'ss-deselect',\n                deselectPath: 'M10,10 L90,90 M10,90 L90,10',\n                arrow: 'ss-arrow',\n                arrowClose: 'M10,30 L50,70 L90,30',\n                arrowOpen: 'M10,70 L50,30 L90,70',\n                content: 'ss-content',\n                openAbove: 'ss-open-above',\n                openBelow: 'ss-open-below',\n                search: 'ss-search',\n                searchHighlighter: 'ss-search-highlight',\n                searching: 'ss-searching',\n                addable: 'ss-addable',\n                addablePath: 'M50,10 L50,90 M10,50 L90,50',\n                list: 'ss-list',\n                optgroup: 'ss-optgroup',\n                optgroupLabel: 'ss-optgroup-label',\n                optgroupLabelText: 'ss-optgroup-label-text',\n                optgroupActions: 'ss-optgroup-actions',\n                optgroupSelectAll: 'ss-selectall',\n                optgroupSelectAllBox: 'M60,10 L10,10 L10,90 L90,90 L90,50',\n                optgroupSelectAllCheck: 'M30,45 L50,70 L90,10',\n                optgroupClosable: 'ss-closable',\n                option: 'ss-option',\n                optionDelete: 'M10,10 L90,90 M10,90 L90,10',\n                highlighted: 'ss-highlighted',\n                open: 'ss-open',\n                close: 'ss-close',\n                selected: 'ss-selected',\n                error: 'ss-error',\n                disabled: 'ss-disabled',\n                hide: 'ss-hide',\n            };\n            this.store = store;\n            this.settings = settings;\n            this.callbacks = callbacks;\n            this.main = this.mainDiv();\n            this.content = this.contentDiv();\n            this.updateClassStyles();\n            this.updateAriaAttributes();\n            this.settings.contentLocation.appendChild(this.content.main);\n        }\n        enable() {\n            this.main.main.classList.remove(this.classes.disabled);\n            this.content.search.input.disabled = false;\n        }\n        disable() {\n            this.main.main.classList.add(this.classes.disabled);\n            this.content.search.input.disabled = true;\n        }\n        open() {\n            this.main.arrow.path.setAttribute('d', this.classes.arrowOpen);\n            this.main.main.classList.add(this.settings.openPosition === 'up' ? this.classes.openAbove : this.classes.openBelow);\n            this.main.main.setAttribute('aria-expanded', 'true');\n            this.moveContent();\n            const selectedOptions = this.store.getSelectedOptions();\n            if (selectedOptions.length) {\n                const selectedId = selectedOptions[selectedOptions.length - 1].id;\n                const selectedOption = this.content.list.querySelector('[data-id=\"' + selectedId + '\"]');\n                if (selectedOption) {\n                    this.ensureElementInView(this.content.list, selectedOption);\n                }\n            }\n        }\n        close() {\n            this.main.main.classList.remove(this.classes.openAbove);\n            this.main.main.classList.remove(this.classes.openBelow);\n            this.main.main.setAttribute('aria-expanded', 'false');\n            this.content.main.classList.remove(this.classes.openAbove);\n            this.content.main.classList.remove(this.classes.openBelow);\n            this.main.arrow.path.setAttribute('d', this.classes.arrowClose);\n        }\n        updateClassStyles() {\n            this.main.main.className = '';\n            this.main.main.removeAttribute('style');\n            this.content.main.className = '';\n            this.content.main.removeAttribute('style');\n            this.main.main.classList.add(this.classes.main);\n            this.content.main.classList.add(this.classes.content);\n            if (this.settings.style !== '') {\n                this.main.main.style.cssText = this.settings.style;\n                this.content.main.style.cssText = this.settings.style;\n            }\n            if (this.settings.class.length) {\n                for (const c of this.settings.class) {\n                    if (c.trim() !== '') {\n                        this.main.main.classList.add(c.trim());\n                        this.content.main.classList.add(c.trim());\n                    }\n                }\n            }\n            if (this.settings.contentPosition === 'relative') {\n                this.content.main.classList.add('ss-' + this.settings.contentPosition);\n            }\n        }\n        updateAriaAttributes() {\n            this.main.main.role = 'combobox';\n            this.main.main.setAttribute('aria-haspopup', 'listbox');\n            this.main.main.setAttribute('aria-controls', this.content.main.id);\n            this.main.main.setAttribute('aria-expanded', 'false');\n            this.content.main.setAttribute('role', 'listbox');\n        }\n        mainDiv() {\n            var _a;\n            const main = document.createElement('div');\n            main.dataset.id = this.settings.id;\n            main.setAttribute('aria-label', this.settings.ariaLabel);\n            main.tabIndex = 0;\n            main.onkeydown = (e) => {\n                switch (e.key) {\n                    case 'ArrowUp':\n                    case 'ArrowDown':\n                        this.callbacks.open();\n                        e.key === 'ArrowDown' ? this.highlight('down') : this.highlight('up');\n                        return false;\n                    case 'Tab':\n                        this.callbacks.close();\n                        return true;\n                    case 'Enter':\n                    case ' ':\n                        this.callbacks.open();\n                        const highlighted = this.content.list.querySelector('.' + this.classes.highlighted);\n                        if (highlighted) {\n                            highlighted.click();\n                        }\n                        return false;\n                    case 'Escape':\n                        this.callbacks.close();\n                        return false;\n                }\n                return false;\n            };\n            main.onclick = (e) => {\n                if (this.settings.disabled) {\n                    return;\n                }\n                this.settings.isOpen ? this.callbacks.close() : this.callbacks.open();\n            };\n            const values = document.createElement('div');\n            values.classList.add(this.classes.values);\n            main.appendChild(values);\n            const deselect = document.createElement('div');\n            deselect.classList.add(this.classes.deselect);\n            const selectedOptions = (_a = this.store) === null || _a === void 0 ? void 0 : _a.getSelectedOptions();\n            if (!this.settings.allowDeselect || (this.settings.isMultiple && selectedOptions && selectedOptions.length <= 0)) {\n                deselect.classList.add(this.classes.hide);\n            }\n            else {\n                deselect.classList.remove(this.classes.hide);\n            }\n            deselect.onclick = (e) => {\n                e.stopPropagation();\n                if (this.settings.disabled) {\n                    return;\n                }\n                let shouldDelete = true;\n                const before = this.store.getSelectedOptions();\n                const after = [];\n                if (this.callbacks.beforeChange) {\n                    shouldDelete = this.callbacks.beforeChange(after, before) === true;\n                }\n                if (shouldDelete) {\n                    if (this.settings.isMultiple) {\n                        this.callbacks.setSelected([], false);\n                        this.updateDeselectAll();\n                    }\n                    else {\n                        const firstOption = this.store.getFirstOption();\n                        const value = firstOption ? firstOption.value : '';\n                        this.callbacks.setSelected(value, false);\n                    }\n                    if (this.settings.closeOnSelect) {\n                        this.callbacks.close();\n                    }\n                    if (this.callbacks.afterChange) {\n                        this.callbacks.afterChange(this.store.getSelectedOptions());\n                    }\n                }\n            };\n            const deselectSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            deselectSvg.setAttribute('viewBox', '0 0 100 100');\n            const deselectPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            deselectPath.setAttribute('d', this.classes.deselectPath);\n            deselectSvg.appendChild(deselectPath);\n            deselect.appendChild(deselectSvg);\n            main.appendChild(deselect);\n            const arrow = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            arrow.classList.add(this.classes.arrow);\n            arrow.setAttribute('viewBox', '0 0 100 100');\n            const arrowPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            arrowPath.setAttribute('d', this.classes.arrowClose);\n            if (this.settings.alwaysOpen) {\n                arrow.classList.add(this.classes.hide);\n            }\n            arrow.appendChild(arrowPath);\n            main.appendChild(arrow);\n            return {\n                main: main,\n                values: values,\n                deselect: {\n                    main: deselect,\n                    svg: deselectSvg,\n                    path: deselectPath,\n                },\n                arrow: {\n                    main: arrow,\n                    path: arrowPath,\n                },\n            };\n        }\n        mainFocus(eventType) {\n            if (eventType !== 'click') {\n                this.main.main.focus({ preventScroll: true });\n            }\n        }\n        placeholder() {\n            const placeholderOption = this.store.filter((o) => o.placeholder, false);\n            let placeholderText = this.settings.placeholderText;\n            if (placeholderOption.length) {\n                if (placeholderOption[0].html !== '') {\n                    placeholderText = placeholderOption[0].html;\n                }\n                else if (placeholderOption[0].text !== '') {\n                    placeholderText = placeholderOption[0].text;\n                }\n            }\n            const placeholder = document.createElement('div');\n            placeholder.classList.add(this.classes.placeholder);\n            placeholder.innerHTML = placeholderText;\n            return placeholder;\n        }\n        renderValues() {\n            if (!this.settings.isMultiple) {\n                this.renderSingleValue();\n                return;\n            }\n            this.renderMultipleValues();\n            this.updateDeselectAll();\n        }\n        renderSingleValue() {\n            const selected = this.store.filter((o) => {\n                return o.selected && !o.placeholder;\n            }, false);\n            const selectedSingle = selected.length > 0 ? selected[0] : null;\n            if (!selectedSingle) {\n                this.main.values.innerHTML = this.placeholder().outerHTML;\n            }\n            else {\n                const singleValue = document.createElement('div');\n                singleValue.classList.add(this.classes.single);\n                if (selectedSingle.html) {\n                    singleValue.innerHTML = selectedSingle.html;\n                }\n                else {\n                    singleValue.innerText = selectedSingle.text;\n                }\n                this.main.values.innerHTML = singleValue.outerHTML;\n            }\n            if (!this.settings.allowDeselect || !selected.length) {\n                this.main.deselect.main.classList.add(this.classes.hide);\n            }\n            else {\n                this.main.deselect.main.classList.remove(this.classes.hide);\n            }\n        }\n        renderMultipleValues() {\n            let currentNodes = this.main.values.childNodes;\n            let selectedOptions = this.store.filter((opt) => {\n                return opt.selected && opt.display;\n            }, false);\n            if (selectedOptions.length === 0) {\n                this.main.values.innerHTML = this.placeholder().outerHTML;\n                return;\n            }\n            else {\n                const placeholder = this.main.values.querySelector('.' + this.classes.placeholder);\n                if (placeholder) {\n                    placeholder.remove();\n                }\n            }\n            if (selectedOptions.length > this.settings.maxValuesShown) {\n                const singleValue = document.createElement('div');\n                singleValue.classList.add(this.classes.max);\n                singleValue.textContent = this.settings.maxValuesMessage.replace('{number}', selectedOptions.length.toString());\n                this.main.values.innerHTML = singleValue.outerHTML;\n                return;\n            }\n            else {\n                const maxValuesMessage = this.main.values.querySelector('.' + this.classes.max);\n                if (maxValuesMessage) {\n                    maxValuesMessage.remove();\n                }\n            }\n            let removeNodes = [];\n            for (let i = 0; i < currentNodes.length; i++) {\n                const node = currentNodes[i];\n                const id = node.getAttribute('data-id');\n                if (id) {\n                    const found = selectedOptions.filter((opt) => {\n                        return opt.id === id;\n                    }, false);\n                    if (!found.length) {\n                        removeNodes.push(node);\n                    }\n                }\n            }\n            for (const n of removeNodes) {\n                n.classList.add(this.classes.valueOut);\n                setTimeout(() => {\n                    if (this.main.values.hasChildNodes() && this.main.values.contains(n)) {\n                        this.main.values.removeChild(n);\n                    }\n                }, 100);\n            }\n            currentNodes = this.main.values.childNodes;\n            for (let d = 0; d < selectedOptions.length; d++) {\n                let shouldAdd = true;\n                for (let i = 0; i < currentNodes.length; i++) {\n                    if (selectedOptions[d].id === String(currentNodes[i].dataset.id)) {\n                        shouldAdd = false;\n                    }\n                }\n                if (shouldAdd) {\n                    if (this.settings.keepOrder) {\n                        this.main.values.appendChild(this.multipleValue(selectedOptions[d]));\n                    }\n                    else {\n                        if (currentNodes.length === 0) {\n                            this.main.values.appendChild(this.multipleValue(selectedOptions[d]));\n                        }\n                        else if (d === 0) {\n                            this.main.values.insertBefore(this.multipleValue(selectedOptions[d]), currentNodes[d]);\n                        }\n                        else {\n                            currentNodes[d - 1].insertAdjacentElement('afterend', this.multipleValue(selectedOptions[d]));\n                        }\n                    }\n                }\n            }\n        }\n        multipleValue(option) {\n            const value = document.createElement('div');\n            value.classList.add(this.classes.value);\n            value.dataset.id = option.id;\n            const text = document.createElement('div');\n            text.classList.add(this.classes.valueText);\n            text.innerText = option.text;\n            value.appendChild(text);\n            if (!option.mandatory) {\n                const deleteDiv = document.createElement('div');\n                deleteDiv.classList.add(this.classes.valueDelete);\n                deleteDiv.onclick = (e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (this.settings.disabled) {\n                        return;\n                    }\n                    let shouldDelete = true;\n                    const before = this.store.getSelectedOptions();\n                    const after = before.filter((o) => {\n                        return o.selected && o.id !== option.id;\n                    }, true);\n                    if (this.settings.minSelected && after.length < this.settings.minSelected) {\n                        return;\n                    }\n                    if (this.callbacks.beforeChange) {\n                        shouldDelete = this.callbacks.beforeChange(after, before) === true;\n                    }\n                    if (shouldDelete) {\n                        let selectedValues = [];\n                        for (const o of after) {\n                            if (o instanceof Optgroup) {\n                                for (const c of o.options) {\n                                    selectedValues.push(c.value);\n                                }\n                            }\n                            if (o instanceof Option) {\n                                selectedValues.push(o.value);\n                            }\n                        }\n                        this.callbacks.setSelected(selectedValues, false);\n                        if (this.settings.closeOnSelect) {\n                            this.callbacks.close();\n                        }\n                        if (this.callbacks.afterChange) {\n                            this.callbacks.afterChange(after);\n                        }\n                        this.updateDeselectAll();\n                    }\n                };\n                const deleteSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                deleteSvg.setAttribute('viewBox', '0 0 100 100');\n                const deletePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                deletePath.setAttribute('d', this.classes.optionDelete);\n                deleteSvg.appendChild(deletePath);\n                deleteDiv.appendChild(deleteSvg);\n                value.appendChild(deleteDiv);\n            }\n            return value;\n        }\n        contentDiv() {\n            const main = document.createElement('div');\n            main.dataset.id = this.settings.id;\n            const search = this.searchDiv();\n            main.appendChild(search.main);\n            const list = this.listDiv();\n            main.appendChild(list);\n            return {\n                main: main,\n                search: search,\n                list: list,\n            };\n        }\n        moveContent() {\n            if (this.settings.contentPosition === 'relative') {\n                this.moveContentBelow();\n                return;\n            }\n            if (this.settings.openPosition === 'down') {\n                this.moveContentBelow();\n                return;\n            }\n            else if (this.settings.openPosition === 'up') {\n                this.moveContentAbove();\n                return;\n            }\n            if (this.putContent() === 'up') {\n                this.moveContentAbove();\n            }\n            else {\n                this.moveContentBelow();\n            }\n        }\n        searchDiv() {\n            const main = document.createElement('div');\n            const input = document.createElement('input');\n            const addable = document.createElement('div');\n            main.classList.add(this.classes.search);\n            const searchReturn = {\n                main,\n                input,\n            };\n            if (!this.settings.showSearch) {\n                main.classList.add(this.classes.hide);\n                input.readOnly = true;\n            }\n            input.type = 'search';\n            input.placeholder = this.settings.searchPlaceholder;\n            input.tabIndex = -1;\n            input.setAttribute('aria-label', this.settings.searchPlaceholder);\n            input.setAttribute('autocapitalize', 'off');\n            input.setAttribute('autocomplete', 'off');\n            input.setAttribute('autocorrect', 'off');\n            input.oninput = debounce((e) => {\n                this.callbacks.search(e.target.value);\n            }, 100);\n            input.onkeydown = (e) => {\n                switch (e.key) {\n                    case 'ArrowUp':\n                    case 'ArrowDown':\n                        e.key === 'ArrowDown' ? this.highlight('down') : this.highlight('up');\n                        return false;\n                    case 'Tab':\n                        this.callbacks.close();\n                        return true;\n                    case 'Escape':\n                        this.callbacks.close();\n                        return false;\n                    case 'Enter':\n                    case ' ':\n                        if (this.callbacks.addable && e.ctrlKey) {\n                            addable.click();\n                            return false;\n                        }\n                        else {\n                            const highlighted = this.content.list.querySelector('.' + this.classes.highlighted);\n                            if (highlighted) {\n                                highlighted.click();\n                                return false;\n                            }\n                        }\n                        return true;\n                }\n                return true;\n            };\n            main.appendChild(input);\n            if (this.callbacks.addable) {\n                addable.classList.add(this.classes.addable);\n                const plus = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                plus.setAttribute('viewBox', '0 0 100 100');\n                const plusPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                plusPath.setAttribute('d', this.classes.addablePath);\n                plus.appendChild(plusPath);\n                addable.appendChild(plus);\n                addable.onclick = (e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (!this.callbacks.addable) {\n                        return;\n                    }\n                    const inputValue = this.content.search.input.value.trim();\n                    if (inputValue === '') {\n                        this.content.search.input.focus();\n                        return;\n                    }\n                    const runFinish = (oo) => {\n                        let newOption = new Option(oo);\n                        this.callbacks.addOption(newOption);\n                        if (this.settings.isMultiple) {\n                            let values = this.store.getSelected();\n                            values.push(newOption.value);\n                            this.callbacks.setSelected(values, true);\n                        }\n                        else {\n                            this.callbacks.setSelected([newOption.value], true);\n                        }\n                        this.callbacks.search('');\n                        if (this.settings.closeOnSelect) {\n                            setTimeout(() => {\n                                this.callbacks.close();\n                            }, 100);\n                        }\n                    };\n                    const addableValue = this.callbacks.addable(inputValue);\n                    if (addableValue === false || addableValue === undefined || addableValue === null) {\n                        return;\n                    }\n                    if (addableValue instanceof Promise) {\n                        addableValue.then((value) => {\n                            if (typeof value === 'string') {\n                                runFinish({\n                                    text: value,\n                                    value: value,\n                                });\n                            }\n                            else {\n                                runFinish(value);\n                            }\n                        });\n                    }\n                    else if (typeof addableValue === 'string') {\n                        runFinish({\n                            text: addableValue,\n                            value: addableValue,\n                        });\n                    }\n                    else {\n                        runFinish(addableValue);\n                    }\n                    return;\n                };\n                main.appendChild(addable);\n                searchReturn.addable = {\n                    main: addable,\n                    svg: plus,\n                    path: plusPath,\n                };\n            }\n            return searchReturn;\n        }\n        searchFocus() {\n            this.content.search.input.focus();\n        }\n        getOptions(notPlaceholder = false, notDisabled = false, notHidden = false) {\n            let query = '.' + this.classes.option;\n            if (notPlaceholder) {\n                query += ':not(.' + this.classes.placeholder + ')';\n            }\n            if (notDisabled) {\n                query += ':not(.' + this.classes.disabled + ')';\n            }\n            if (notHidden) {\n                query += ':not(.' + this.classes.hide + ')';\n            }\n            return Array.from(this.content.list.querySelectorAll(query));\n        }\n        highlight(dir) {\n            const options = this.getOptions(true, true, true);\n            if (options.length === 0) {\n                return;\n            }\n            if (options.length === 1) {\n                if (!options[0].classList.contains(this.classes.highlighted)) {\n                    options[0].classList.add(this.classes.highlighted);\n                    return;\n                }\n            }\n            let highlighted = false;\n            for (const o of options) {\n                if (o.classList.contains(this.classes.highlighted)) {\n                    highlighted = true;\n                }\n            }\n            if (!highlighted) {\n                for (const o of options) {\n                    if (o.classList.contains(this.classes.selected)) {\n                        o.classList.add(this.classes.highlighted);\n                        break;\n                    }\n                }\n            }\n            for (let i = 0; i < options.length; i++) {\n                if (options[i].classList.contains(this.classes.highlighted)) {\n                    const prevOption = options[i];\n                    prevOption.classList.remove(this.classes.highlighted);\n                    const prevParent = prevOption.parentElement;\n                    if (prevParent && prevParent.classList.contains(this.classes.open)) {\n                        const optgroupLabel = prevParent.querySelector('.' + this.classes.optgroupLabel);\n                        if (optgroupLabel) {\n                            optgroupLabel.click();\n                        }\n                    }\n                    let selectOption = options[dir === 'down' ? (i + 1 < options.length ? i + 1 : 0) : i - 1 >= 0 ? i - 1 : options.length - 1];\n                    selectOption.classList.add(this.classes.highlighted);\n                    this.ensureElementInView(this.content.list, selectOption);\n                    const selectParent = selectOption.parentElement;\n                    if (selectParent && selectParent.classList.contains(this.classes.close)) {\n                        const optgroupLabel = selectParent.querySelector('.' + this.classes.optgroupLabel);\n                        if (optgroupLabel) {\n                            optgroupLabel.click();\n                        }\n                    }\n                    return;\n                }\n            }\n            options[dir === 'down' ? 0 : options.length - 1].classList.add(this.classes.highlighted);\n            this.ensureElementInView(this.content.list, options[dir === 'down' ? 0 : options.length - 1]);\n        }\n        listDiv() {\n            const options = document.createElement('div');\n            options.classList.add(this.classes.list);\n            return options;\n        }\n        renderError(error) {\n            this.content.list.innerHTML = '';\n            const errorDiv = document.createElement('div');\n            errorDiv.classList.add(this.classes.error);\n            errorDiv.textContent = error;\n            this.content.list.appendChild(errorDiv);\n        }\n        renderSearching() {\n            this.content.list.innerHTML = '';\n            const searchingDiv = document.createElement('div');\n            searchingDiv.classList.add(this.classes.searching);\n            searchingDiv.textContent = this.settings.searchingText;\n            this.content.list.appendChild(searchingDiv);\n        }\n        renderOptions(data) {\n            this.content.list.innerHTML = '';\n            if (data.length === 0) {\n                const noResults = document.createElement('div');\n                noResults.classList.add(this.classes.search);\n                noResults.innerHTML = this.settings.searchText;\n                this.content.list.appendChild(noResults);\n                return;\n            }\n            for (const d of data) {\n                if (d instanceof Optgroup) {\n                    const optgroupEl = document.createElement('div');\n                    optgroupEl.classList.add(this.classes.optgroup);\n                    const optgroupLabel = document.createElement('div');\n                    optgroupLabel.classList.add(this.classes.optgroupLabel);\n                    optgroupEl.appendChild(optgroupLabel);\n                    const optgroupLabelText = document.createElement('div');\n                    optgroupLabelText.classList.add(this.classes.optgroupLabelText);\n                    optgroupLabelText.textContent = d.label;\n                    optgroupLabel.appendChild(optgroupLabelText);\n                    const optgroupActions = document.createElement('div');\n                    optgroupActions.classList.add(this.classes.optgroupActions);\n                    optgroupLabel.appendChild(optgroupActions);\n                    if (this.settings.isMultiple && d.selectAll) {\n                        const selectAll = document.createElement('div');\n                        selectAll.classList.add(this.classes.optgroupSelectAll);\n                        let allSelected = true;\n                        for (const o of d.options) {\n                            if (!o.selected) {\n                                allSelected = false;\n                                break;\n                            }\n                        }\n                        if (allSelected) {\n                            selectAll.classList.add(this.classes.selected);\n                        }\n                        const selectAllText = document.createElement('span');\n                        selectAllText.textContent = d.selectAllText;\n                        selectAll.appendChild(selectAllText);\n                        const selectAllSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                        selectAllSvg.setAttribute('viewBox', '0 0 100 100');\n                        selectAll.appendChild(selectAllSvg);\n                        const selectAllBox = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        selectAllBox.setAttribute('d', this.classes.optgroupSelectAllBox);\n                        selectAllSvg.appendChild(selectAllBox);\n                        const selectAllCheck = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        selectAllCheck.setAttribute('d', this.classes.optgroupSelectAllCheck);\n                        selectAllSvg.appendChild(selectAllCheck);\n                        selectAll.addEventListener('click', (e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            const currentSelected = this.store.getSelected();\n                            if (allSelected) {\n                                const newSelected = currentSelected.filter((s) => {\n                                    for (const o of d.options) {\n                                        if (s === o.value) {\n                                            return false;\n                                        }\n                                    }\n                                    return true;\n                                });\n                                this.callbacks.setSelected(newSelected, true);\n                                return;\n                            }\n                            else {\n                                const newSelected = currentSelected.concat(d.options.map((o) => o.value));\n                                for (const o of d.options) {\n                                    if (!this.store.getOptionByID(o.id)) {\n                                        this.callbacks.addOption(o);\n                                    }\n                                }\n                                this.callbacks.setSelected(newSelected, true);\n                                return;\n                            }\n                        });\n                        optgroupActions.appendChild(selectAll);\n                    }\n                    if (d.closable !== 'off') {\n                        const optgroupClosable = document.createElement('div');\n                        optgroupClosable.classList.add(this.classes.optgroupClosable);\n                        const optgroupClosableSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                        optgroupClosableSvg.setAttribute('viewBox', '0 0 100 100');\n                        optgroupClosableSvg.classList.add(this.classes.arrow);\n                        optgroupClosable.appendChild(optgroupClosableSvg);\n                        const optgroupClosableArrow = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        optgroupClosableSvg.appendChild(optgroupClosableArrow);\n                        if (d.options.some((o) => o.selected) || this.content.search.input.value.trim() !== '') {\n                            optgroupClosable.classList.add(this.classes.open);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                        }\n                        else if (d.closable === 'open') {\n                            optgroupEl.classList.add(this.classes.open);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                        }\n                        else if (d.closable === 'close') {\n                            optgroupEl.classList.add(this.classes.close);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowClose);\n                        }\n                        optgroupLabel.addEventListener('click', (e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            if (optgroupEl.classList.contains(this.classes.close)) {\n                                optgroupEl.classList.remove(this.classes.close);\n                                optgroupEl.classList.add(this.classes.open);\n                                optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                            }\n                            else {\n                                optgroupEl.classList.remove(this.classes.open);\n                                optgroupEl.classList.add(this.classes.close);\n                                optgroupClosableArrow.setAttribute('d', this.classes.arrowClose);\n                            }\n                        });\n                        optgroupActions.appendChild(optgroupClosable);\n                    }\n                    optgroupEl.appendChild(optgroupLabel);\n                    for (const o of d.options) {\n                        optgroupEl.appendChild(this.option(o));\n                    }\n                    this.content.list.appendChild(optgroupEl);\n                }\n                if (d instanceof Option) {\n                    this.content.list.appendChild(this.option(d));\n                }\n            }\n        }\n        option(option) {\n            if (option.placeholder) {\n                const placeholder = document.createElement('div');\n                placeholder.classList.add(this.classes.option);\n                placeholder.classList.add(this.classes.hide);\n                return placeholder;\n            }\n            const optionEl = document.createElement('div');\n            optionEl.dataset.id = option.id;\n            optionEl.id = option.id;\n            optionEl.classList.add(this.classes.option);\n            optionEl.setAttribute('role', 'option');\n            if (option.class) {\n                option.class.split(' ').forEach((dataClass) => {\n                    optionEl.classList.add(dataClass);\n                });\n            }\n            if (option.style) {\n                optionEl.style.cssText = option.style;\n            }\n            if (this.settings.searchHighlight && this.content.search.input.value.trim() !== '') {\n                optionEl.innerHTML = this.highlightText(option.html !== '' ? option.html : option.text, this.content.search.input.value, this.classes.searchHighlighter);\n            }\n            else if (option.html !== '') {\n                optionEl.innerHTML = option.html;\n            }\n            else {\n                optionEl.textContent = option.text;\n            }\n            if (this.settings.showOptionTooltips && optionEl.textContent) {\n                optionEl.setAttribute('title', optionEl.textContent);\n            }\n            if (!option.display) {\n                optionEl.classList.add(this.classes.hide);\n            }\n            if (option.disabled) {\n                optionEl.classList.add(this.classes.disabled);\n            }\n            if (option.selected && this.settings.hideSelected) {\n                optionEl.classList.add(this.classes.hide);\n            }\n            if (option.selected) {\n                optionEl.classList.add(this.classes.selected);\n                optionEl.setAttribute('aria-selected', 'true');\n                this.main.main.setAttribute('aria-activedescendant', optionEl.id);\n            }\n            else {\n                optionEl.classList.remove(this.classes.selected);\n                optionEl.setAttribute('aria-selected', 'false');\n            }\n            optionEl.addEventListener('click', (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                const selectedOptions = this.store.getSelected();\n                const element = e.currentTarget;\n                const elementID = String(element.dataset.id);\n                if (option.disabled || (option.selected && !this.settings.allowDeselect)) {\n                    return;\n                }\n                if ((this.settings.isMultiple && this.settings.maxSelected <= selectedOptions.length && !option.selected) ||\n                    (this.settings.isMultiple && this.settings.minSelected >= selectedOptions.length && option.selected)) {\n                    return;\n                }\n                let shouldUpdate = false;\n                const before = this.store.getSelectedOptions();\n                let after = [];\n                if (this.settings.isMultiple) {\n                    if (option.selected) {\n                        after = before.filter((o) => o.id !== elementID);\n                    }\n                    else {\n                        after = before.concat(option);\n                    }\n                }\n                if (!this.settings.isMultiple) {\n                    if (option.selected) {\n                        after = [];\n                    }\n                    else {\n                        after = [option];\n                    }\n                }\n                if (!this.callbacks.beforeChange) {\n                    shouldUpdate = true;\n                }\n                if (this.callbacks.beforeChange) {\n                    if (this.callbacks.beforeChange(after, before) === false) {\n                        shouldUpdate = false;\n                    }\n                    else {\n                        shouldUpdate = true;\n                    }\n                }\n                if (shouldUpdate) {\n                    if (!this.store.getOptionByID(elementID)) {\n                        this.callbacks.addOption(option);\n                    }\n                    this.callbacks.setSelected(after.map((o) => o.value), false);\n                    if (this.settings.closeOnSelect) {\n                        this.callbacks.close();\n                    }\n                    if (this.callbacks.afterChange) {\n                        this.callbacks.afterChange(after);\n                    }\n                }\n            });\n            return optionEl;\n        }\n        destroy() {\n            this.main.main.remove();\n            this.content.main.remove();\n        }\n        highlightText(str, search, className) {\n            let completedString = str;\n            const regex = new RegExp('(' + search.trim() + ')(?![^<]*>[^<>]*</)', 'i');\n            if (!str.match(regex)) {\n                return str;\n            }\n            const matchStartPosition = str.match(regex).index;\n            const matchEndPosition = matchStartPosition + str.match(regex)[0].toString().length;\n            const originalTextFoundByRegex = str.substring(matchStartPosition, matchEndPosition);\n            completedString = completedString.replace(regex, `<mark class=\"${className}\">${originalTextFoundByRegex}</mark>`);\n            return completedString;\n        }\n        moveContentAbove() {\n            const mainHeight = this.main.main.offsetHeight;\n            const contentHeight = this.content.main.offsetHeight;\n            this.main.main.classList.remove(this.classes.openBelow);\n            this.main.main.classList.add(this.classes.openAbove);\n            this.content.main.classList.remove(this.classes.openBelow);\n            this.content.main.classList.add(this.classes.openAbove);\n            const containerRect = this.main.main.getBoundingClientRect();\n            this.content.main.style.margin = '-' + (mainHeight + contentHeight - 1) + 'px 0px 0px 0px';\n            this.content.main.style.top = containerRect.top + containerRect.height + window.scrollY + 'px';\n            this.content.main.style.left = containerRect.left + window.scrollX + 'px';\n            this.content.main.style.width = containerRect.width + 'px';\n        }\n        moveContentBelow() {\n            this.main.main.classList.remove(this.classes.openAbove);\n            this.main.main.classList.add(this.classes.openBelow);\n            this.content.main.classList.remove(this.classes.openAbove);\n            this.content.main.classList.add(this.classes.openBelow);\n            const containerRect = this.main.main.getBoundingClientRect();\n            this.content.main.style.margin = '-1px 0px 0px 0px';\n            if (this.settings.contentPosition !== 'relative') {\n                this.content.main.style.top = containerRect.top + containerRect.height + window.scrollY + 'px';\n                this.content.main.style.left = containerRect.left + window.scrollX + 'px';\n                this.content.main.style.width = containerRect.width + 'px';\n            }\n        }\n        ensureElementInView(container, element) {\n            const cTop = container.scrollTop + container.offsetTop;\n            const cBottom = cTop + container.clientHeight;\n            const eTop = element.offsetTop;\n            const eBottom = eTop + element.clientHeight;\n            if (eTop < cTop) {\n                container.scrollTop -= cTop - eTop;\n            }\n            else if (eBottom > cBottom) {\n                container.scrollTop += eBottom - cBottom;\n            }\n        }\n        putContent() {\n            const mainHeight = this.main.main.offsetHeight;\n            const mainRect = this.main.main.getBoundingClientRect();\n            const contentHeight = this.content.main.offsetHeight;\n            const spaceBelow = window.innerHeight - (mainRect.top + mainHeight);\n            if (spaceBelow <= contentHeight) {\n                if (mainRect.top > contentHeight) {\n                    return 'up';\n                }\n                else {\n                    return 'down';\n                }\n            }\n            return 'down';\n        }\n        updateDeselectAll() {\n            if (!this.store || !this.settings) {\n                return;\n            }\n            const selected = this.store.getSelectedOptions();\n            const hasSelectedItems = selected && selected.length > 0;\n            const isMultiple = this.settings.isMultiple;\n            const allowDeselect = this.settings.allowDeselect;\n            const deselectButton = this.main.deselect.main;\n            const hideClass = this.classes.hide;\n            if (allowDeselect && !(isMultiple && !hasSelectedItems)) {\n                deselectButton.classList.remove(hideClass);\n            }\n            else {\n                deselectButton.classList.add(hideClass);\n            }\n        }\n    }\n\n    class Select {\n        constructor(select) {\n            this.listen = false;\n            this.observer = null;\n            this.select = select;\n            this.valueChange = this.valueChange.bind(this);\n            this.select.addEventListener('change', this.valueChange, {\n                passive: true,\n            });\n            this.observer = new MutationObserver(this.observeCall.bind(this));\n            this.changeListen(true);\n        }\n        enable() {\n            this.select.disabled = false;\n        }\n        disable() {\n            this.select.disabled = true;\n        }\n        hideUI() {\n            this.select.tabIndex = -1;\n            this.select.style.display = 'none';\n            this.select.setAttribute('aria-hidden', 'true');\n        }\n        showUI() {\n            this.select.removeAttribute('tabindex');\n            this.select.style.display = '';\n            this.select.removeAttribute('aria-hidden');\n        }\n        changeListen(listen) {\n            this.listen = listen;\n            if (listen) {\n                if (this.observer) {\n                    this.observer.observe(this.select, {\n                        subtree: true,\n                        childList: true,\n                        attributes: true,\n                    });\n                }\n            }\n            if (!listen) {\n                if (this.observer) {\n                    this.observer.disconnect();\n                }\n            }\n        }\n        valueChange(ev) {\n            if (this.listen && this.onValueChange) {\n                this.onValueChange(this.getSelectedValues());\n            }\n            return true;\n        }\n        observeCall(mutations) {\n            if (!this.listen) {\n                return;\n            }\n            let classChanged = false;\n            let disabledChanged = false;\n            let optgroupOptionChanged = false;\n            for (const m of mutations) {\n                if (m.target === this.select) {\n                    if (m.attributeName === 'disabled') {\n                        disabledChanged = true;\n                    }\n                    if (m.attributeName === 'class') {\n                        classChanged = true;\n                    }\n                }\n                if (m.target.nodeName === 'OPTGROUP' || m.target.nodeName === 'OPTION') {\n                    optgroupOptionChanged = true;\n                }\n            }\n            if (classChanged && this.onClassChange) {\n                this.onClassChange(this.select.className.split(' '));\n            }\n            if (disabledChanged && this.onDisabledChange) {\n                this.changeListen(false);\n                this.onDisabledChange(this.select.disabled);\n                this.changeListen(true);\n            }\n            if (optgroupOptionChanged && this.onOptionsChange) {\n                this.changeListen(false);\n                this.onOptionsChange(this.getData());\n                this.changeListen(true);\n            }\n        }\n        getData() {\n            let data = [];\n            const nodes = this.select.childNodes;\n            for (const n of nodes) {\n                if (n.nodeName === 'OPTGROUP') {\n                    data.push(this.getDataFromOptgroup(n));\n                }\n                if (n.nodeName === 'OPTION') {\n                    data.push(this.getDataFromOption(n));\n                }\n            }\n            return data;\n        }\n        getDataFromOptgroup(optgroup) {\n            let data = {\n                id: optgroup.id,\n                label: optgroup.label,\n                selectAll: optgroup.dataset ? optgroup.dataset.selectall === 'true' : false,\n                selectAllText: optgroup.dataset ? optgroup.dataset.selectalltext : 'Select all',\n                closable: optgroup.dataset ? optgroup.dataset.closable : 'off',\n                options: [],\n            };\n            const options = optgroup.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTION') {\n                    data.options.push(this.getDataFromOption(o));\n                }\n            }\n            return data;\n        }\n        getDataFromOption(option) {\n            return {\n                id: option.id,\n                value: option.value,\n                text: option.text,\n                html: option.dataset && option.dataset.html ? option.dataset.html : '',\n                selected: option.selected,\n                display: option.style.display === 'none' ? false : true,\n                disabled: option.disabled,\n                mandatory: option.dataset ? option.dataset.mandatory === 'true' : false,\n                placeholder: option.dataset.placeholder === 'true',\n                class: option.className,\n                style: option.style.cssText,\n                data: option.dataset,\n            };\n        }\n        getSelectedValues() {\n            let values = [];\n            const options = this.select.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTGROUP') {\n                    const optgroupOptions = o.childNodes;\n                    for (const oo of optgroupOptions) {\n                        if (oo.nodeName === 'OPTION') {\n                            const option = oo;\n                            if (option.selected) {\n                                values.push(option.value);\n                            }\n                        }\n                    }\n                }\n                if (o.nodeName === 'OPTION') {\n                    const option = o;\n                    if (option.selected) {\n                        values.push(option.value);\n                    }\n                }\n            }\n            return values;\n        }\n        setSelected(value) {\n            this.changeListen(false);\n            const options = this.select.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTGROUP') {\n                    const optgroup = o;\n                    const optgroupOptions = optgroup.childNodes;\n                    for (const oo of optgroupOptions) {\n                        if (oo.nodeName === 'OPTION') {\n                            const option = oo;\n                            option.selected = value.includes(option.value);\n                        }\n                    }\n                }\n                if (o.nodeName === 'OPTION') {\n                    const option = o;\n                    option.selected = value.includes(option.value);\n                }\n            }\n            this.changeListen(true);\n        }\n        updateSelect(id, style, classes) {\n            this.changeListen(false);\n            if (id) {\n                this.select.dataset.id = id;\n            }\n            if (style) {\n                this.select.style.cssText = style;\n            }\n            if (classes) {\n                this.select.className = '';\n                classes.forEach((c) => {\n                    if (c.trim() !== '') {\n                        this.select.classList.add(c.trim());\n                    }\n                });\n            }\n            this.changeListen(true);\n        }\n        updateOptions(data) {\n            this.changeListen(false);\n            this.select.innerHTML = '';\n            for (const d of data) {\n                if (d instanceof Optgroup) {\n                    this.select.appendChild(this.createOptgroup(d));\n                }\n                if (d instanceof Option) {\n                    this.select.appendChild(this.createOption(d));\n                }\n            }\n            this.select.dispatchEvent(new Event('change'));\n            this.changeListen(true);\n        }\n        createOptgroup(optgroup) {\n            const optgroupEl = document.createElement('optgroup');\n            optgroupEl.id = optgroup.id;\n            optgroupEl.label = optgroup.label;\n            if (optgroup.selectAll) {\n                optgroupEl.dataset.selectAll = 'true';\n            }\n            if (optgroup.closable !== 'off') {\n                optgroupEl.dataset.closable = optgroup.closable;\n            }\n            if (optgroup.options) {\n                for (const o of optgroup.options) {\n                    optgroupEl.appendChild(this.createOption(o));\n                }\n            }\n            return optgroupEl;\n        }\n        createOption(info) {\n            const optionEl = document.createElement('option');\n            optionEl.id = info.id;\n            optionEl.value = info.value;\n            optionEl.innerHTML = info.text;\n            if (info.html !== '') {\n                optionEl.setAttribute('data-html', info.html);\n            }\n            if (info.selected) {\n                optionEl.selected = info.selected;\n            }\n            if (info.disabled) {\n                optionEl.disabled = true;\n            }\n            if (info.display === false) {\n                optionEl.style.display = 'none';\n            }\n            if (info.placeholder) {\n                optionEl.setAttribute('data-placeholder', 'true');\n            }\n            if (info.mandatory) {\n                optionEl.setAttribute('data-mandatory', 'true');\n            }\n            if (info.class) {\n                info.class.split(' ').forEach((optionClass) => {\n                    optionEl.classList.add(optionClass);\n                });\n            }\n            if (info.data && typeof info.data === 'object') {\n                Object.keys(info.data).forEach((key) => {\n                    optionEl.setAttribute('data-' + kebabCase(key), info.data[key]);\n                });\n            }\n            return optionEl;\n        }\n        destroy() {\n            this.changeListen(false);\n            this.select.removeEventListener('change', this.valueChange);\n            if (this.observer) {\n                this.observer.disconnect();\n                this.observer = null;\n            }\n            delete this.select.dataset.id;\n            this.showUI();\n        }\n    }\n\n    class Settings {\n        constructor(settings) {\n            this.id = '';\n            this.style = '';\n            this.class = [];\n            this.isMultiple = false;\n            this.isOpen = false;\n            this.isFullOpen = false;\n            this.intervalMove = null;\n            if (!settings) {\n                settings = {};\n            }\n            this.id = 'ss-' + generateID();\n            this.style = settings.style || '';\n            this.class = settings.class || [];\n            this.disabled = settings.disabled !== undefined ? settings.disabled : false;\n            this.alwaysOpen = settings.alwaysOpen !== undefined ? settings.alwaysOpen : false;\n            this.showSearch = settings.showSearch !== undefined ? settings.showSearch : true;\n            this.ariaLabel = settings.ariaLabel || 'Combobox';\n            this.searchPlaceholder = settings.searchPlaceholder || 'Search';\n            this.searchText = settings.searchText || 'No Results';\n            this.searchingText = settings.searchingText || 'Searching...';\n            this.searchHighlight = settings.searchHighlight !== undefined ? settings.searchHighlight : false;\n            this.closeOnSelect = settings.closeOnSelect !== undefined ? settings.closeOnSelect : true;\n            this.contentLocation = settings.contentLocation || document.body;\n            this.contentPosition = settings.contentPosition || 'absolute';\n            this.openPosition = settings.openPosition || 'auto';\n            this.placeholderText = settings.placeholderText !== undefined ? settings.placeholderText : 'Select Value';\n            this.allowDeselect = settings.allowDeselect !== undefined ? settings.allowDeselect : false;\n            this.hideSelected = settings.hideSelected !== undefined ? settings.hideSelected : false;\n            this.keepOrder = settings.keepOrder !== undefined ? settings.keepOrder : false;\n            this.showOptionTooltips = settings.showOptionTooltips !== undefined ? settings.showOptionTooltips : false;\n            this.minSelected = settings.minSelected || 0;\n            this.maxSelected = settings.maxSelected || 1000;\n            this.timeoutDelay = settings.timeoutDelay || 200;\n            this.maxValuesShown = settings.maxValuesShown || 20;\n            this.maxValuesMessage = settings.maxValuesMessage || '{number} selected';\n        }\n    }\n\n    class SlimSelect {\n        constructor(config) {\n            var _a;\n            this.events = {\n                search: undefined,\n                searchFilter: (opt, search) => {\n                    return opt.text.toLowerCase().indexOf(search.toLowerCase()) !== -1;\n                },\n                addable: undefined,\n                beforeChange: undefined,\n                afterChange: undefined,\n                beforeOpen: undefined,\n                afterOpen: undefined,\n                beforeClose: undefined,\n                afterClose: undefined,\n            };\n            this.windowResize = debounce(() => {\n                if (!this.settings.isOpen && !this.settings.isFullOpen) {\n                    return;\n                }\n                this.render.moveContent();\n            });\n            this.windowScroll = debounce(() => {\n                if (!this.settings.isOpen && !this.settings.isFullOpen) {\n                    return;\n                }\n                this.render.moveContent();\n            });\n            this.documentClick = (e) => {\n                if (!this.settings.isOpen) {\n                    return;\n                }\n                if (e.target && !hasClassInTree(e.target, this.settings.id)) {\n                    this.close(e.type);\n                }\n            };\n            this.windowVisibilityChange = () => {\n                if (document.hidden) {\n                    this.close();\n                }\n            };\n            this.selectEl = (typeof config.select === 'string' ? document.querySelector(config.select) : config.select);\n            if (!this.selectEl) {\n                if (config.events && config.events.error) {\n                    config.events.error(new Error('Could not find select element'));\n                }\n                return;\n            }\n            if (this.selectEl.tagName !== 'SELECT') {\n                if (config.events && config.events.error) {\n                    config.events.error(new Error('Element isnt of type select'));\n                }\n                return;\n            }\n            if (this.selectEl.dataset.ssid) {\n                this.destroy();\n            }\n            this.settings = new Settings(config.settings);\n            const debounceEvents = ['afterChange', 'beforeOpen', 'afterOpen', 'beforeClose', 'afterClose'];\n            for (const key in config.events) {\n                if (!config.events.hasOwnProperty(key)) {\n                    continue;\n                }\n                if (debounceEvents.indexOf(key) !== -1) {\n                    this.events[key] = debounce(config.events[key], 100);\n                }\n                else {\n                    this.events[key] = config.events[key];\n                }\n            }\n            this.settings.disabled = ((_a = config.settings) === null || _a === void 0 ? void 0 : _a.disabled) ? config.settings.disabled : this.selectEl.disabled;\n            this.settings.isMultiple = this.selectEl.multiple;\n            this.settings.style = this.selectEl.style.cssText;\n            this.settings.class = this.selectEl.className.split(' ');\n            this.select = new Select(this.selectEl);\n            this.select.updateSelect(this.settings.id, this.settings.style, this.settings.class);\n            this.select.hideUI();\n            this.select.onValueChange = (values) => {\n                this.setSelected(values);\n            };\n            this.select.onClassChange = (classes) => {\n                this.settings.class = classes;\n                this.render.updateClassStyles();\n            };\n            this.select.onDisabledChange = (disabled) => {\n                if (disabled) {\n                    this.disable();\n                }\n                else {\n                    this.enable();\n                }\n            };\n            this.select.onOptionsChange = (data) => {\n                this.setData(data);\n            };\n            this.store = new Store(this.settings.isMultiple ? 'multiple' : 'single', config.data ? config.data : this.select.getData());\n            if (config.data) {\n                this.select.updateOptions(this.store.getData());\n            }\n            const renderCallbacks = {\n                open: this.open.bind(this),\n                close: this.close.bind(this),\n                addable: this.events.addable ? this.events.addable : undefined,\n                setSelected: this.setSelected.bind(this),\n                addOption: this.addOption.bind(this),\n                search: this.search.bind(this),\n                beforeChange: this.events.beforeChange,\n                afterChange: this.events.afterChange,\n            };\n            this.render = new Render(this.settings, this.store, renderCallbacks);\n            this.render.renderValues();\n            this.render.renderOptions(this.store.getData());\n            const selectAriaLabel = this.selectEl.getAttribute('aria-label');\n            const selectAriaLabelledBy = this.selectEl.getAttribute('aria-labelledby');\n            if (selectAriaLabel) {\n                this.render.main.main.setAttribute('aria-label', selectAriaLabel);\n            }\n            else if (selectAriaLabelledBy) {\n                this.render.main.main.setAttribute('aria-labelledby', selectAriaLabelledBy);\n            }\n            if (this.selectEl.parentNode) {\n                this.selectEl.parentNode.insertBefore(this.render.main.main, this.selectEl.nextSibling);\n            }\n            window.addEventListener('resize', this.windowResize, false);\n            if (this.settings.openPosition === 'auto') {\n                window.addEventListener('scroll', this.windowScroll, false);\n            }\n            document.addEventListener('visibilitychange', this.windowVisibilityChange);\n            if (this.settings.disabled) {\n                this.disable();\n            }\n            if (this.settings.alwaysOpen) {\n                this.open();\n            }\n            this.selectEl.slim = this;\n        }\n        enable() {\n            this.settings.disabled = false;\n            this.select.enable();\n            this.render.enable();\n        }\n        disable() {\n            this.settings.disabled = true;\n            this.select.disable();\n            this.render.disable();\n        }\n        getData() {\n            return this.store.getData();\n        }\n        setData(data) {\n            const selected = this.store.getSelected();\n            const err = this.store.validateDataArray(data);\n            if (err) {\n                if (this.events.error) {\n                    this.events.error(err);\n                }\n                return;\n            }\n            this.store.setData(data);\n            const dataClean = this.store.getData();\n            this.select.updateOptions(dataClean);\n            this.render.renderValues();\n            this.render.renderOptions(dataClean);\n            if (this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        getSelected() {\n            return this.store.getSelected();\n        }\n        setSelected(value, runAfterChange = true) {\n            const selected = this.store.getSelected();\n            this.store.setSelectedBy('value', Array.isArray(value) ? value : [value]);\n            const data = this.store.getData();\n            this.select.updateOptions(data);\n            this.render.renderValues();\n            if (this.render.content.search.input.value !== '') {\n                this.search(this.render.content.search.input.value);\n            }\n            else {\n                this.render.renderOptions(data);\n            }\n            if (runAfterChange && this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        addOption(option) {\n            const selected = this.store.getSelected();\n            if (!this.store.getDataOptions().some((o) => { var _a; return o.value === ((_a = option.value) !== null && _a !== void 0 ? _a : option.text); })) {\n                this.store.addOption(option);\n            }\n            const data = this.store.getData();\n            this.select.updateOptions(data);\n            this.render.renderValues();\n            this.render.renderOptions(data);\n            if (this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        open() {\n            if (this.settings.disabled || this.settings.isOpen) {\n                return;\n            }\n            if (this.events.beforeOpen) {\n                this.events.beforeOpen();\n            }\n            this.render.open();\n            if (this.settings.showSearch) {\n                this.render.searchFocus();\n            }\n            this.settings.isOpen = true;\n            setTimeout(() => {\n                if (this.events.afterOpen) {\n                    this.events.afterOpen();\n                }\n                if (this.settings.isOpen) {\n                    this.settings.isFullOpen = true;\n                }\n                document.addEventListener('click', this.documentClick);\n            }, this.settings.timeoutDelay);\n            if (this.settings.contentPosition === 'absolute') {\n                if (this.settings.intervalMove) {\n                    clearInterval(this.settings.intervalMove);\n                }\n                this.settings.intervalMove = setInterval(this.render.moveContent.bind(this.render), 500);\n            }\n        }\n        close(eventType = null) {\n            if (!this.settings.isOpen || this.settings.alwaysOpen) {\n                return;\n            }\n            if (this.events.beforeClose) {\n                this.events.beforeClose();\n            }\n            this.render.close();\n            if (this.render.content.search.input.value !== '') {\n                this.search('');\n            }\n            this.render.mainFocus(eventType);\n            this.settings.isOpen = false;\n            this.settings.isFullOpen = false;\n            setTimeout(() => {\n                if (this.events.afterClose) {\n                    this.events.afterClose();\n                }\n                document.removeEventListener('click', this.documentClick);\n            }, this.settings.timeoutDelay);\n            if (this.settings.intervalMove) {\n                clearInterval(this.settings.intervalMove);\n            }\n        }\n        search(value) {\n            if (this.render.content.search.input.value !== value) {\n                this.render.content.search.input.value = value;\n            }\n            if (!this.events.search) {\n                this.render.renderOptions(value === '' ? this.store.getData() : this.store.search(value, this.events.searchFilter));\n                return;\n            }\n            this.render.renderSearching();\n            const searchResp = this.events.search(value, this.store.getSelectedOptions());\n            if (searchResp instanceof Promise) {\n                searchResp\n                    .then((data) => {\n                    this.render.renderOptions(this.store.partialToFullData(data));\n                })\n                    .catch((err) => {\n                    this.render.renderError(typeof err === 'string' ? err : err.message);\n                });\n                return;\n            }\n            else if (Array.isArray(searchResp)) {\n                this.render.renderOptions(this.store.partialToFullData(searchResp));\n            }\n            else {\n                this.render.renderError('Search event must return a promise or an array of data');\n            }\n        }\n        destroy() {\n            document.removeEventListener('click', this.documentClick);\n            window.removeEventListener('resize', this.windowResize, false);\n            if (this.settings.openPosition === 'auto') {\n                window.removeEventListener('scroll', this.windowScroll, false);\n            }\n            document.removeEventListener('visibilitychange', this.windowVisibilityChange);\n            this.store.setData([]);\n            this.render.destroy();\n            this.select.destroy();\n        }\n    }\n\n    return SlimSelect;\n\n}));\n","import { fetchBreeds, fetchCatByBreed } from './cat-api';\nimport SlimSelect from 'slim-select';\n\nconst breedSelect = document.querySelector('.breed-select');\n\nnew SlimSelect({\n  breedSelect,\n});\n\nlet breedId;\n\nhideElements(0);\n\nbreedSelect.addEventListener('change', event => {\n  console.log('Change event occurred');\n  breedId = event.target.value;\n  console.log(`Selected breed ID: ${breedId}`);\n  cat_Info();\n});\n\nconsole.log('Starting fetchBreeds...');\nfetchBreeds()\n  .then(breeds => {\n    console.log(`fetchBreeds successful. Received ${breeds.length} breeds`);\n    const options = breeds\n      .map(breed => {\n        const option = document.createElement('option');\n        option.value = breed.id;\n        option.textContent = breed.name;\n        return option;\n      })\n      .forEach(option => {\n        console.log(`Appending option ${option.textContent} (${option.value})`);\n        breedSelect.appendChild(option);\n        hideElements(1);\n      });\n  })\n  .catch(error => {\n    console.error('Error fetchingBreeds:', error);\n    hideElements(0);\n  });\n\nfunction cat_Info() {\n  console.log('catInfo');\n  const breed_Img = 'https://api.thecatapi.com/v1/images/search?breed_ids=';\n  const catData = {};\n  console.log(`Fetching breed by ID: ${breedId}`);\n\n  fetchCatByBreed(breedId)\n    .then(cat => {\n      console.log(`Fetched cat data: ${JSON.stringify(cat)}`);\n      catData.id = cat.id;\n      catData.name = cat.name;\n      catData.description = cat.description;\n      catData.img = `${breed_Img}${cat.id}`;\n      console.log(catData);\n\n      if (!catData.id) {\n        console.error('catData.id is null or undefined');\n        return;\n        hideElements(0);\n      }\n\n      fetch(catData.img)\n        .then(response => {\n          console.log(`Fetched response: ${response.status}`);\n          if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n          }\n          return response.json();\n        })\n        .then(img => {\n          console.log(`Fetched image: ${JSON.stringify(img)}`);\n          if (!img || !img.length) {\n            console.error('img is null or empty');\n            return;\n          }\n          catData.img = img[0].url;\n          console.log('catData');\n          console.log(catData.img);\n          const catInfoDiv = document.querySelector('.cat-info');\n          catInfoDiv.innerHTML = `\n           <img src=\"${catData.img}\" alt=\"${catData.name}\" width=\"300\" height=\"300\">\n           <h2>${catData.name}</h2>\n           <p>${catData.description}</p>`;\n          hideElements(1);\n        })\n        .catch(error => {\n          console.error(`Error fetching cat image: ${error} `);\n        });\n    })\n    .catch(error => {\n      console.error(`Error fetching cat by ID: ${error} `);\n      hideElements(0);\n    });\n}\n\nfunction hideElements(tag) {\n  const loader = document.querySelector('.loader');\n  const error = document.querySelector('.error');\n\n  if (tag === 1) {\n    loader.style.display = 'none';\n    error.style.display = 'none';\n  } else {\n    loader.style.display = 'block';\n    error.style.display = 'block';\n  }\n}\n"],"names":["console","log","$6b5f202d1456c0af$export$57b7d3a597416aa2","breedId","fetch","then","response","ok","Error","status","json","cat","catch","error","finally","$f753f16ae3da2a89$exports","generateID","Math","random","toString","substring","hasClassInTree","element","className","hasClass","e","c","classList","contains","dataset","id","parentByClass","document","parentNode","debounce","func","wait","immediate","timeout","args","context","self","later","apply","callNow","clearTimeout","setTimeout","isEqual","a","b","JSON","stringify","kebabCase","str","result","replace","match","toLowerCase","toUpperCase","Optgroup","constructor","optgroup","this","label","selectAll","undefined","selectAllText","closable","options","o","push","Option","option","value","text","html","selected","display","disabled","mandatory","placeholder","class","style","data","Store","validateDataArray","Array","isArray","dataObj","validateOption","partialToFullData","dataFinal","forEach","optOptions","length","setData","selectType","setSelectedBy","getSelected","getData","filter","getDataOptions","addOption","concat","selectedType","selectedValues","firstOption","hasSelected","includes","selectedOptions","getSelectedOptions","opt","getSelectedIDs","selectedIDs","op","getOptgroupByID","getOptionByID","getSelectType","getFirstOption","search","searchFilter","trim","includeOptgroup","dataSearch","type","Render","enable","main","remove","classes","content","input","disable","add","open","arrow","path","setAttribute","arrowOpen","settings","openPosition","openAbove","openBelow","moveContent","store","selectedId","selectedOption","list","querySelector","ensureElementInView","close","arrowClose","updateClassStyles","removeAttribute","cssText","contentPosition","updateAriaAttributes","role","mainDiv","_a","createElement","ariaLabel","tabIndex","onkeydown","key","callbacks","highlight","highlighted","click","onclick","isOpen","values","appendChild","deselect","allowDeselect","isMultiple","hide","stopPropagation","shouldDelete","before","after","beforeChange","setSelected","updateDeselectAll","closeOnSelect","afterChange","deselectSvg","createElementNS","deselectPath","arrowPath","alwaysOpen","svg","mainFocus","eventType","focus","preventScroll","placeholderOption","placeholderText","innerHTML","renderValues","renderMultipleValues","renderSingleValue","selectedSingle","singleValue","single","innerText","outerHTML","currentNodes","childNodes","maxValuesShown","max","textContent","maxValuesMessage","removeNodes","i","node","getAttribute","n","valueOut","hasChildNodes","removeChild","d","shouldAdd","String","keepOrder","multipleValue","insertBefore","insertAdjacentElement","valueText","deleteDiv","valueDelete","preventDefault","minSelected","deleteSvg","deletePath","optionDelete","contentDiv","searchDiv","listDiv","putContent","moveContentAbove","moveContentBelow","addable","searchReturn","showSearch","readOnly","searchPlaceholder","oninput","target","ctrlKey","plus","plusPath","addablePath","inputValue","runFinish","oo","newOption","addableValue","Promise","searchFocus","getOptions","notPlaceholder","notDisabled","notHidden","query","from","querySelectorAll","dir","prevOption","prevParent","parentElement","optgroupLabel","selectOption","selectParent","renderError","errorDiv","renderSearching","searchingDiv","searching","searchingText","renderOptions","noResults","searchText","optgroupEl","optgroupLabelText","optgroupActions","optgroupSelectAll","allSelected","o1","selectAllSvg","selectAllBox","optgroupSelectAllBox","selectAllCheck","optgroupSelectAllCheck","addEventListener","currentSelected","newSelected","s","map","o5","optgroupClosable","optgroupClosableSvg","optgroupClosableArrow","some","o2","optionEl","split","dataClass","searchHighlight","highlightText","searchHighlighter","showOptionTooltips","hideSelected","currentTarget","elementID","maxSelected","shouldUpdate","destroy","completedString","regex","RegExp","matchStartPosition","index","matchEndPosition","originalTextFoundByRegex","mainHeight","offsetHeight","contentHeight","containerRect","getBoundingClientRect","margin","top","height","window","scrollY","left","scrollX","width","container","cTop","scrollTop","offsetTop","cBottom","clientHeight","eTop","eBottom","mainRect","innerHeight","hasSelectedItems","deselectButton","hideClass","contentLocation","Select","select","hideUI","showUI","changeListen","listen","observer","observe","subtree","childList","attributes","disconnect","valueChange","ev","onValueChange","getSelectedValues","observeCall","mutations","classChanged","disabledChanged","optgroupOptionChanged","m","attributeName","nodeName","onClassChange","onDisabledChange","onOptionsChange","nodes","getDataFromOptgroup","getDataFromOption","selectall","selectalltext","optgroupOptions","updateSelect","updateOptions","createOptgroup","createOption","dispatchEvent","Event","info","optionClass","Object","keys","removeEventListener","bind","passive","MutationObserver","Settings","isFullOpen","intervalMove","body","timeoutDelay","SlimSelect","render","err","events","dataClean","runAfterChange","beforeOpen","afterOpen","documentClick","clearInterval","setInterval","beforeClose","afterClose","searchResp","message","windowResize","windowScroll","windowVisibilityChange","config","indexOf","hidden","selectEl","tagName","ssid","debounceEvents","hasOwnProperty","multiple","renderCallbacks","selectAriaLabel","selectAriaLabelledBy","nextSibling","slim","factory","$1f0dc3b9307be026$var$breedSelect","$1f0dc3b9307be026$var$breedId","$1f0dc3b9307be026$var$hideElements","tag","loader","$parcel$interopDefault","event","breed_Img","catData","name","description","img","url","$1f0dc3b9307be026$var$cat_Info","breeds","breed"],"version":3,"file":"index.d51c125a.js.map"}